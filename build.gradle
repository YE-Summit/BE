plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'univ'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// DB
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'
	runtimeOnly 'com.h2database:h2'

	// p6spy 적용
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger3 적용
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// JWT
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

tasks.named('test') {
	useJUnitPlatform()
}

//plain jar 생성 방지
tasks.named("jar") {
	enabled = false
}

tasks.register('copyExternalProperties', Copy) {
	from "./config"
	include "*.yml"
	into "src/main/resources"
}

processResources.dependsOn('copyExternalProperties')
processTestResources.dependsOn('copyExternalProperties')
